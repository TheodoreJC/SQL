# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


#Who are the top artists with the highest popularity, based on the maximum popularity of their tracks in the Spotify data?

SELECT DISTINCT artist_name,track_name, MAX(popularity)
FROM spotifydata
``
GROUP BY artist_name, track_name
ORDER BY MAX(popularity) DESC
``
LIMIT 20;

#Which tracks from the Spotify data have the fastest tempo and the highest danceability?
``
SELECT DISTINCT artist_name, track_name, tempo, danceability
FROM spotifydata
``
ORDER BY tempo DESC;

#Is there a correlation between the energy and loudness of tracks?

`SELECT DISTINCT artist_name,track_name, energy, loudness
FROM spotifydata
``
ORDER BY energy DESC;

#How do the instrumentalness levels of tracks in the Spotify data compare to their speechiness levels, particularly focusing on the tracks with the highest speechiness

SELECT DISTINCT artist_name,track_name, instrumentalness, speechiness
FROM spotifydata
``
ORDER BY speechiness DESC;
