--Create a grocery store database

CREATE TABLE store (id INTEGER PRIMARY KEY, item TEXT, section TEXT, price INTEGER, popularity INTEGER);

INSERT INTO store VALUES (1, "papaya", "produce", 2.99, 50);
INSERT INTO store VALUES (2, "banana", "produce", 0.99, 95);
INSERT INTO store VALUES (3, "qtips", "hygiene", 2.99, 55);
INSERT INTO store VALUES (4, "beans", "bulk", 0.99, 50);
INSERT INTO store VALUES (5, "beyond burgers", "meat", 4.99, 65);
INSERT INTO store VALUES (6, "salsa", "fresh", 3.25, 43);
INSERT INTO store VALUES (7, "hummus", "fresh", 2.99, 35);
INSERT INTO store VALUES (8, "papaya", "hygiene", 2.99, 50);
INSERT INTO store VALUES (9, "chick'n nuggs", "meat", 4.99, 75);
INSERT INTO store VALUES (10, "peas", "frozen", 0.99, 25);
INSERT INTO store VALUES (11, "smoothie berries", "frozen", 2.99, 33);
INSERT INTO store VALUES (12, "granola", "bulk", 1.99, 80);
INSERT INTO store VALUES (13, "vitamin D", "health", 8.99,29);
INSERT INTO store VALUES (14, "nutritional yeast", "health", 2.99, 26);
INSERT INTO store VALUES (15, "popcorn", "snacks", 1.99, 47);


#How many orders were placed in January?

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
LEFT JOIN BIT_DB.customers
WHERE LENGTH(orderID) = 6;

#How many of those orders were for an iPhone?

SELECT COUNT(orderID)
FROM BIT_DB.JanSales
LEFT JOIN BIT_DB.customers
WHERE Product = 'iPhone'
AND LENGTH(orderID) = 6

#Select the customer account numbers for all the orders that were placed in February?**

SELECT distinct acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
   ON customers.order_id = FebSales.orderID
WHERE LENGTH(orderID) = 6;

#Which product was the cheapest one sold in January, and what was the price?**

SELECT distinct Product, price
FROM BIT_DB.JanSales
ORDER BY PRICE ASC 
LIMIT 1;

#What is the total revenue for each product sold in January?

SELECT sum(quantity)*price AS revenue, Product
FROM BIT_DB.JanSales
GROUP BY Product 
ORDER BY revenue ASC;

OR 

SELECT ROUND(SUM(quantity) * price, 2) AS revenue, Product
FROM BIT_DB.JanSales
GROUP BY Product 
ORDER BY revenue ASC;

#Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;


#How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT acctnum), AVG(price*Quantity)
FROM BIT_DB.customers
LEFT JOIN BIT_DB.FebSales
    ON customers.order_id = FebSales.orderID
WHERE QUANTITY > 2
AND LENGTH (orderID) = 6


#Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT location, SUM(orderID)

FROM BIT_DB.JanSales
WHERE location LIKE '%New York%'
GROUP BY location
HAVING COUNT(orderID) > 3

#How many of each type of headphone were sold in February?

SELECT orderID, Product, COUNT(Quantity) 
FROM BIT_DB.FebSales
WHERE product like '%Headphone%'
AND length(orderID) = 6
GROUP BY Product;

#What was the average amount spent per account in February? 
``
SELECT AVG(quantity*price)
FROM BIT_DB.customers
LEFT JOIN BIT_DB.FebSales
    ON customers.order_id = FebSales.orderID
WHERE LENGTH(orderID) = 6;

#What was the average quantity of products purchased per account in February? 

select sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
``
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
``
WHERE length(orderid) = 6

#Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT SUM(quantity*price), product
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(quantity*price) DESC
LIMIT 1;
